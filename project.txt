#!/bin/bash
shopt -s globstar; for i in /local/data/course/project/groups/mango/project_final/txdout/tophat/**/accepted_hits_*.bam; do echo "$i"; echo mkdir -p "${i%_thout*}""_clout"; echo cufflinks -p 8 -o "${i%_thout*}""_clout" -G /local/data/course/project/groups/mango/Saccharomyces_cerevisiae/Ensembl/EF2/Annotation/Genes/genes.gtf "$i"; done

#create a file with paths to all the transcripts.gtf file
shopt -s globstar; for i in /local/data/course/project/groups/mango/project_final/txdout/cufflink/*_clout/transcripts.gtf; do echo "$i"; echo "$i" >> /local/data/course/project/groups/mango/project_final/txdout/cuffmerge/assemblies.txt; done

#run cuffemrge on the file
cuffmerge -g /local/data/course/project/groups/mango/Saccharomyces_cerevisiae/Ensembl/EF2/Annotation/Genes/genes.gtf -s /local/data/course/project/groups/mango/Saccharomyces_cerevisiae/Ensembl/EF2/Sequence/WholeGenomeFasta/genome.fa -p 8 /local/data/course/project/groups/mango/project_final/txdout/cuffmerge/assemblies.txt

#create an index file for all the bam files generated in tophat
shopt -s globstar; for i in /local/data/course/project/groups/mango/project_final/txdout/tophat/**/accepted_hits_*.bam; do echo $i; samtools index $i; done

#generate a statistics report on all the bam files for the number of reads mapped in each chromosome
shopt -s globstar; for i in /local/data/course/project/groups/mango/project_final/txdout/tophat/**/accepted_hits_*.bam; do echo $i; samtools idxstats $i >> /local/data/course/project/groups/mango/project_final/txdout/tophat/tophat_statistics.txt; done

#Do cuffcompare to generate the genes and transcripts that differ from the reference
cuffcompare -i /local/data/course/project/groups/mango/project_final/txdout/cuffmerge/assemblies.txt -r /local/data/course/project/groups/mango/Saccharomyces_cerevisiae/Ensembl/EF2/Annotation/Genes/genes.gtf

#print a file that shows the statistics generated by cuffcompare in a readable way
shopt -s globstar; for i in /local/data/course/project/groups/mango/project_final/txdout/**/*.tmap; do echo $i; awk 'NR > 1 { s[$3]++ } END { for (j in s) { print j, s[j] }}' $i; done
